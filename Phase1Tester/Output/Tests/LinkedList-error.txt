In notify: Element
Element,ST_CLASS adds (ST_INT,ST_INT,ST_BOOLEAN)->ST_BOOLEAN
Element,ST_CLASS adds ()->ST_INT
Element,ST_CLASS adds ()->ST_INT
Element,ST_CLASS adds ()->ST_BOOLEAN
Element,ST_CLASS adds (Element)->ST_BOOLEAN
Element,ST_CLASS adds (ST_INT,ST_INT)->ST_BOOLEAN

method names:
Init
GetAge
GetSalary
GetMarried
Equal
Compare

In notify: List
List,ST_CLASS adds ()->ST_BOOLEAN
List,ST_CLASS adds (Element,List,ST_BOOLEAN)->ST_BOOLEAN
List,ST_CLASS adds (Element)->List
List,ST_CLASS adds (List)->ST_BOOLEAN
List,ST_CLASS adds (Element)->List
List,ST_CLASS adds (Element)->ST_INT
List,ST_CLASS adds ()->ST_BOOLEAN
List,ST_CLASS adds ()->Element
List,ST_CLASS adds ()->List
List,ST_CLASS adds ()->ST_BOOLEAN

method names:
Init
InitNew
Insert
SetNext
Delete
Search
GetEnd
GetElem
GetNext
Print

In notify: LL
LL,ST_CLASS adds ()->ST_INT

method names:
Start

Class Names:
LinkedList
Element
List
LL

Debug in ClassRefChecker: list is empty, good job.
Method: Start
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: v_Age, ST_INT
PrimaryExpression: v_Salary, ST_INT
PrimaryExpression: v_Married, ST_BOOLEAN
PrimaryExpression: Age, ST_INT
PrimaryExpression: Salary, ST_INT
PrimaryExpression: Married, ST_BOOLEAN
PrimaryExpression: other, Element
Method: GetAge
()->ST_INT was called
Statement: Method was called!
Method: Compare
PrimaryExpression: aux01, ST_INT
PrimaryExpression: Age, ST_INT
(ST_INT,ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: other, Element
Method: GetSalary
()->ST_INT was called
Statement: Method was called!
Method: Compare
PrimaryExpression: aux02, ST_INT
PrimaryExpression: Salary, ST_INT
(ST_INT,ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: Married, ST_BOOLEAN
PrimaryExpression: other, Element
Method: GetMarried
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: other, Element
Method: GetMarried
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: ret_val, ST_BOOLEAN
PrimaryExpression: num2, ST_INT
PrimaryExpression: num1, ST_INT
PrimaryExpression: num2, ST_INT
PrimaryExpression: num1, ST_INT
PrimaryExpression: aux02, ST_INT
PrimaryExpression: retval, ST_BOOLEAN
PrimaryExpression: v_end, ST_BOOLEAN
PrimaryExpression: v_elem, Element
Element <= Element
PrimaryExpression: v_next, List
List <= List
List <= List
List <= List
PrimaryExpression: aux02, List
Method: InitNew
PrimaryExpression: new_elem, Element
PrimaryExpression: aux03, List
ST_CLASS_VAR and ST_CLASS_VAR
Element <= Element
ST_CLASS_VAR and ST_CLASS_VAR
List <= List
(Element,List,ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: aux02, List
PrimaryExpression: v_next, List
List <= List
Error: Unexpected TypeST_INT
Expecting ST_BOOLEAN
