In notify: BT
BT,ST_CLASS adds ()->ST_INT

method names:
Start

In notify: Tree
Tree,ST_CLASS adds (ST_INT)->ST_BOOLEAN
Tree,ST_CLASS adds (Tree)->ST_BOOLEAN
Tree,ST_CLASS adds (Tree)->ST_BOOLEAN
Tree,ST_CLASS adds ()->Tree
Tree,ST_CLASS adds ()->Tree
Tree,ST_CLASS adds ()->ST_INT
Tree,ST_CLASS adds (ST_INT)->ST_BOOLEAN
Tree,ST_CLASS adds ()->ST_BOOLEAN
Tree,ST_CLASS adds ()->ST_BOOLEAN
Tree,ST_CLASS adds (ST_BOOLEAN)->ST_BOOLEAN
Tree,ST_CLASS adds (ST_BOOLEAN)->ST_BOOLEAN
Tree,ST_CLASS adds (ST_INT,ST_INT)->ST_BOOLEAN
Tree,ST_CLASS adds (ST_INT)->ST_BOOLEAN
Tree,ST_CLASS adds (ST_INT)->ST_BOOLEAN
Tree,ST_CLASS adds (Tree,Tree)->ST_BOOLEAN
Tree,ST_CLASS adds (Tree,Tree)->ST_BOOLEAN
Tree,ST_CLASS adds (Tree,Tree)->ST_BOOLEAN
Tree,ST_CLASS adds (ST_INT)->ST_INT
Tree,ST_CLASS adds ()->ST_BOOLEAN
Tree,ST_CLASS adds (Tree)->ST_BOOLEAN

method names:
Init
SetRight
SetLeft
GetRight
GetLeft
GetKey
SetKey
GetHas_Right
GetHas_Left
SetHas_Left
SetHas_Right
Compare
Insert
Delete
Remove
RemoveRight
RemoveLeft
Search
Print
RecPrint

Class Names:
BinaryTree
BT
Tree

Debug in ClassRefChecker: list is empty, good job.
Method: Start
()->ST_INT was called
Statement: Method was called!
Tree <= Tree
PrimaryExpression: root, Tree
Method: Init
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Print
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Print
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Insert
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Print
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Delete
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Print
()->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: root, Tree
Method: Search
(ST_INT)->ST_INT was called
Statement: Method was called!
PrimaryExpression: v_key, ST_INT
PrimaryExpression: rn, Tree
Tree <= Tree
PrimaryExpression: ln, Tree
Tree <= Tree
PrimaryExpression: right, Tree
PrimaryExpression: left, Tree
PrimaryExpression: key, ST_INT
PrimaryExpression: v_key, ST_INT
PrimaryExpression: has_right, ST_BOOLEAN
PrimaryExpression: has_left, ST_BOOLEAN
PrimaryExpression: val, ST_BOOLEAN
PrimaryExpression: val, ST_BOOLEAN
PrimaryExpression: num2, ST_INT
PrimaryExpression: num1, ST_INT
PrimaryExpression: num2, ST_INT
PrimaryExpression: num1, ST_INT
PrimaryExpression: nti, ST_INT
PrimaryExpression: ntb, ST_BOOLEAN
Tree <= Tree
PrimaryExpression: new_node, Tree
Method: Init
PrimaryExpression: v_key, ST_INT
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
Tree <= Tree
PrimaryExpression: cont, ST_BOOLEAN
PrimaryExpression: current_node, Tree
Method: GetKey
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: v_key, ST_INT
PrimaryExpression: key_aux, ST_INT
PrimaryExpression: current_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Method: GetLeft
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: SetHas_Left
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: SetLeft
PrimaryExpression: new_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Method: GetRight
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: SetHas_Right
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: SetRight
PrimaryExpression: new_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
Tree <= Tree
Tree <= Tree
PrimaryExpression: cont, ST_BOOLEAN
PrimaryExpression: current_node, Tree
Method: GetKey
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: v_key, ST_INT
PrimaryExpression: key_aux, ST_INT
PrimaryExpression: current_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Tree <= Tree
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: GetLeft
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: key_aux, ST_INT
PrimaryExpression: v_key, ST_INT
PrimaryExpression: current_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Tree <= Tree
Statement: Method was called!
PrimaryExpression: current_node, Tree
Method: GetRight
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: is_root, ST_BOOLEAN
PrimaryExpression: current_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
Statement: Method was called!
Method: Remove
PrimaryExpression: parent_node, Tree
PrimaryExpression: current_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree,Tree)->ST_BOOLEAN was called
Statement: Method was called!
Method: Remove
PrimaryExpression: parent_node, Tree
PrimaryExpression: current_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree,Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: found, ST_BOOLEAN
PrimaryExpression: c_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
Method: RemoveLeft
PrimaryExpression: p_node, Tree
PrimaryExpression: c_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree,Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
Method: RemoveRight
PrimaryExpression: p_node, Tree
PrimaryExpression: c_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree,Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Method: GetKey
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: GetLeft
()->Tree was called
Method: GetKey
()->ST_INT was called
Statement: Method was called!
Method: Compare
PrimaryExpression: auxkey1, ST_INT
PrimaryExpression: auxkey2, ST_INT
(ST_INT,ST_INT)->ST_BOOLEAN was called
PrimaryExpression: p_node, Tree
Method: SetLeft
PrimaryExpression: my_null, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetHas_Left
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetRight
PrimaryExpression: my_null, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetHas_Right
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
PrimaryExpression: c_node, Tree
Method: SetKey
PrimaryExpression: c_node, Tree
Method: GetRight
()->Tree was called
Method: GetKey
()->ST_INT was called
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Tree <= Tree
PrimaryExpression: c_node, Tree
Method: GetRight
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetRight
PrimaryExpression: my_null, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetHas_Right
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
PrimaryExpression: c_node, Tree
Method: SetKey
PrimaryExpression: c_node, Tree
Method: GetLeft
()->Tree was called
Method: GetKey
()->ST_INT was called
(ST_INT)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: c_node, Tree
Tree <= Tree
PrimaryExpression: c_node, Tree
Method: GetLeft
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetLeft
PrimaryExpression: my_null, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: p_node, Tree
Method: SetHas_Left
(ST_BOOLEAN)->ST_BOOLEAN was called
Statement: Method was called!
Tree <= Tree
PrimaryExpression: cont, ST_BOOLEAN
PrimaryExpression: current_node, Tree
Method: GetKey
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: v_key, ST_INT
PrimaryExpression: key_aux, ST_INT
PrimaryExpression: current_node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Method: GetLeft
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: key_aux, ST_INT
PrimaryExpression: v_key, ST_INT
PrimaryExpression: current_node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
PrimaryExpression: current_node, Tree
Method: GetRight
()->Tree was called
Tree <= Tree
Statement: Method was called!
PrimaryExpression: ifound, ST_INT
Tree <= Tree
Method: RecPrint
PrimaryExpression: current_node, Tree
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: node, Tree
Method: GetHas_Left
()->ST_BOOLEAN was called
Method: RecPrint
PrimaryExpression: node, Tree
Method: GetLeft
()->Tree was called
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
PrimaryExpression: node, Tree
Method: GetKey
()->ST_INT was called
Statement: Method was called!
PrimaryExpression: node, Tree
Method: GetHas_Right
()->ST_BOOLEAN was called
Method: RecPrint
PrimaryExpression: node, Tree
Method: GetRight
()->Tree was called
ST_CLASS_VAR and ST_CLASS_VAR
Tree <= Tree
(Tree)->ST_BOOLEAN was called
Statement: Method was called!
Java program parsed successfully.
